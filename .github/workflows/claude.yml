name: Claude Assistant

on:
  issue_comment:
    types: [created]

jobs:
  claude-assistant:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract user request
        id: extract-request
        run: |
          COMMENT_BODY='${{ github.event.comment.body }}'
          # @claude‰ª•Èôç„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíÊäΩÂá∫
          REQUEST=$(echo "$COMMENT_BODY" | sed -n 's/.*@claude\s*\(.*\)/\1/p')
          echo "request=$REQUEST" >> $GITHUB_OUTPUT

      - name: Get PR context
        id: get-context
        run: |
          PR_NUMBER=$(jq -r ".issue.number" "$GITHUB_EVENT_PATH")
          PR_DATA=$(gh pr view $PR_NUMBER --json title,body,baseRefName)
          PR_TITLE=$(echo "$PR_DATA" | jq -r .title)
          PR_BODY=$(echo "$PR_DATA" | jq -r .body)
          BASE_REF=$(echo "$PR_DATA" | jq -r .baseRefName)
          DIFF=$(git diff origin/$BASE_REF..HEAD)

          echo "pr_title<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_TITLE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "pr_body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Call Claude API
        id: claude-response
        env:
          CLAUDE_MODEL_NAME: ${{ vars.CLAUDE_MODEL_NAME || 'claude-3-5-sonnet-20240620' }}
        run: |
          USER_REQUEST='${{ steps.extract-request.outputs.request }}'
          PR_TITLE='${{ steps.get-context.outputs.pr_title }}'
          PR_BODY='${{ steps.get-context.outputs.pr_body }}'
          DIFF='${{ steps.get-context.outputs.diff }}'

          # „Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„É´„Éº„É´„Å®PR„ÅÆÊñáËÑà„ÇíÁµÑ„ÅøËæº„Çì„Å†„Éó„É≠„É≥„Éó„Éà„ÇíÁîüÊàê
          PROMPT="„ÅÇ„Å™„Åü„ÅØPython„Ç®„Ç≠„Çπ„Éë„Éº„Éà„ÅÆ„Éö„Ç¢„Éó„É≠„Ç∞„É©„Éû„Éº„Åß„Åô„ÄÇ„Åì„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅØPoetry, Python 3.12+, Ruff, pytest„Çí‰ΩøÁî®„Åó„ÄÅÂÖ®„Å¶„ÅÆ„Ç≥„Éº„Éâ„ÅØsrc/„Å´ÈÖçÁΩÆ„Åï„Çå„Åæ„Åô„ÄÇ\n\n‰ª•‰∏ã„ÅÆPRÊÉÖÂ†±„Å®„É¶„Éº„Ç∂„Éº„ÅÆË≥™Âïè„Å´Âü∫„Å•„Åç„ÄÅÂÖ∑‰ΩìÁöÑ„Åã„Å§ÁöÑÁ¢∫„Å™ÂõûÁ≠î„ÇíÊó•Êú¨Ë™û„ÅßÁîüÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n**PR„Çø„Ç§„Éà„É´:** $PR_TITLE\n**PRÊú¨Êñá:**\n$PR_BODY\n\n**„É¶„Éº„Ç∂„Éº„ÅÆË≥™Âïè:** $USER_REQUEST\n\n**Èñ¢ÈÄ£„Åô„Çã„Ç≥„Éº„Éâ„ÅÆÂ∑ÆÂàÜ:**\n\`\`\`diff\n$DIFF\n\`\`\`"

          # ÂÆâÂÖ®„Å™ÊñπÊ≥ï„ÅßAPI„É™„ÇØ„Ç®„Çπ„Éà„ÅÆJSON„Çí„Éï„Ç°„Ç§„É´„Å´Êõ∏„ÅçÂá∫„Åô
          jq -n \
            --arg model "$CLAUDE_MODEL_NAME" \
            --arg content "$PROMPT" \
            '{model: $model, max_tokens: 4096, messages: [{"role": "user", "content": $content}]}' > request.json

          # Claude API„Å´ÈÄÅ‰ø°„Åó„ÄÅ„É¨„Çπ„Éù„É≥„Çπ„Å®HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„ÇíÂèñÂæó
          RESPONSE_DATA=$(curl -s -w "\n%{http_code}" -X POST https://api.anthropic.com/v1/messages \
            -H "Content-Type: application/json" \
            -H "x-api-key: ${{ secrets.ANTHROPIC_API_KEY }}" \
            -H "anthropic-version: 2023-06-01" \
            --data-binary @request.json)

          HTTP_CODE=$(echo "$RESPONSE_DATA" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE_DATA" | sed '$d')

          # „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
          if [ "$HTTP_CODE" -ne 200 ]; then
            CLAUDE_REPLY="Claude API„Å®„ÅÆÈÄö‰ø°„Å´Â§±Êïó„Åó„Åæ„Åó„Åü (HTTP Status: $HTTP_CODE)„ÄÇ\n\n\`\`\`\n$RESPONSE_BODY\n\`\`\`"
          else
            CLAUDE_REPLY=$(echo "$RESPONSE_BODY" | jq -r '.content[0].text')
          fi

          echo "reply<<EOF" >> $GITHUB_OUTPUT
          echo "$CLAUDE_REPLY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Claude response
        run: |
          PR_NUMBER=$(jq -r ".issue.number" "$GITHUB_EVENT_PATH")
          # ÂÆâÂÖ®„Å™ÊñπÊ≥ï„ÅßPR„Ç≥„É°„É≥„Éà„ÅÆJSON„Çí„Éï„Ç°„Ç§„É´„Å´Êõ∏„ÅçÂá∫„Åô
          jq -n --arg body "ü§ñ **Claude Assistant**\n\n${{ steps.claude-response.outputs.reply }}" '{body: $body}' > comment.json

          gh pr comment $PR_NUMBER --body-file comment.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
